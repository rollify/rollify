name: CI

on: [push, pull_request]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    container: golangci/golangci-lint:v1.54.2-alpine
    steps:
      - uses: actions/checkout@v4
      - run: |
          # We need this go flag because it started to error after golangci-lint is using Go 1.21.
          # TODO(slok): Remove it on next (>1.54.2) golangci-lint upgrade to check if this problem has gone.
          export GOFLAGS="-buildvcs=false"
          ./scripts/check/check.sh

  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: false
      - run: make ci-test
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_UPLOAD_TOKEN }}
          file: ./.test_coverage.txt
          fail_ci_if_error: false

  integration-test:
    name: Integration test
    runs-on: ubuntu-latest
    services:
      nats:
        image: nats:2-alpine
        ports:
          - 4222:4222
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: false
      - run: make ci-integration
        env:
          ROLLIFY_INTEGRATION_NATS_ADDR: "localhost:4222"

  rolling-release-images:
    # Only on main branch.
    if: startsWith(github.ref, 'refs/heads/main')
    env:
      TAG_IMAGE_LATEST: "true"
      PROD_IMAGE_NAME: ghcr.io/${GITHUB_REPOSITORY}
      VERSION: ${GITHUB_SHA}
    needs: [check, unit-test, integration-test]
    name: Release images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Docker login
        run: docker login ghcr.io -u ${{ github.actor }} -p "${{ secrets.GITHUB_TOKEN }}"
      - name: Build and publish docker images
        run: make build-publish-image-all
